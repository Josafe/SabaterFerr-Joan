package casPractic;
import java.io.File;
import java.util.Arrays;

import com.sun.tools.javac.code.Attribute.Array;

public class MiniFileManager {

	File rutaActual = new File(System.getProperty("user.dir"));
	File ruta = new File("WorkSpaceEclipse");
	
	private File getCurrentPath;
	
	/*public MiniFileManager() {
		this.ruta = ruta;
	}*/
	
	
	public String gethelp() {
		return "PWD-    Mostra el directori actual \n cd-	Canvia la carpeta actual a 'DIR' Amb .. canvia a la carpeta superior \n ls-		Mostra la llista de directoris i arxius de la carpeta actual (primer directoris, després arxius, tots dos ordenats alfabèticament \n ll- Com ls però mostra també la grandària i la data d'última modificació \n mkdir- Crea el directori DIR en la carpeta actual \n rm- Esborra el FILE si es una carpeta esborrara primer els arxius i despres la carpeta \n mv-		 Mou o canvia de nom FILE1 a FILE2 \n help- 	Mostra una breu ajuda amb les comandes disponibles \n exit:	 Finalitza el programa";
	}
	
	public void getpwd() {
		System.out.println(ruta.getPath()); 
	}
	
	/*cd <DIR>: Canvia la carpeta actual a ‘DIR’.
	Amb .. canvia a la carpeta superior.*/
	
	public String getcd(String vector) {
		if (vector.equals("..")) {
			if(ruta.getCurrentPath().getParent() != null) {
				
			}
		}
	}
	
	/*ls: Mostra la llista de directoris i arxius de la carpeta actual (primer directoris, després arxius,
	tots dos ordenats alfabèticament).*/

	public void getls(String[] vector) {
		 
		File[] llista = ruta.listFiles(); //Per a ordenar-los alfabeticament necessitarem fer us de una llista d'arxius ¡¡¡Falta acabar-ho!!!+
		
		if(ruta.exists()) {
			System.out.println("El nom del fitxer es: " + ruta.getName());
		}
		
		Arrays.sort(llista);
		
		for(File x : llista) {
			if(x.isFile()) {
				System.out.println("[D]" + ruta.getPath());
			}
		
			if(x.isDirectory()) {
				System.out.println("[A]" + ruta.getPath());
			}
		}
		
	}
	/*ll: Com ls però mostra també la grandària i la data d'última modificació.*/
	public void getll(String vector) {
		
		File[] llista = ruta.listFiles(); //Per a ordenar-los alfabeticament necessitarem fer us de una llista d'arxius ¡¡¡Falta acabar-ho!!!
		
		if(ruta.exists()) {
			System.out.println("El nom del fitxer es: " + ruta.getName());
		}
		
		Arrays.sort(llista); //Ordenar llista
		
		for(File x : llista) {
			
			if(x.isFile()) {
			System.out.println("[A]" + ruta.getPath());
			System.out.print(ruta.lastModified());
			System.out.print(ruta.length());
			}
		
			else if(x.isDirectory()) {
			
				System.out.println("[D]" + ruta.getPath());
				System.out.print(ruta.lastModified());	
				System.out.print(ruta.length());
			}
		}
	}
	
	public void getmkdir(String vector) {
		
		boolean crearCarpeta = false;
		
		File carpeta = new File(vector);
		
		if (crearCarpeta = true) {
			System.out.println("S'ha creat el directori " + vector);
			carpeta.mkdir();	 
		}
		else
			System.out.println("No s'ha pogut crear la carpeta");
	}
	
	public void getremove(String vector) {
		
		File borrar = new File(rutaActual + "/" + ruta);
		
		if (ruta.isFile()) {
			borrar.delete();
		}
		
		File[] llista = ruta.listFiles();
		
		if(ruta.isDirectory()) {
			for (File x : llista) {
				System.out.println(x + "Han estat esborrats correctament");
			}
			borrar.delete();
		}
	}
	
	public void getmv(String rutaOrigen) {
	
	}
	
	
}
